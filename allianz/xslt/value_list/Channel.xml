<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:cs="http://www.censhare.com/xml/3.0.0/xpath-functions"
  xmlns:censhare="http://www.censhare.com/xml/3.0.0/xpath-functions"
  xmlns:csc="http://www.censhare.com/censhare-custom"
  exclude-result-prefixes="cs csc">

  <!-- dynamic value list of all target group assets -->

  <!-- import -->
  <xsl:import href="censhare:///service/assets/asset;censhare:resource-key=censhare:transformation.include/storage/master/file"/>

  <!-- parameters -->
  <xsl:param name="asset" select="asset"/>
  <xsl:param name="feature-key"/>
  <xsl:param name="value" select="()"/>

  <!-- root match -->
  <xsl:template match="/">
    <options>
      <xsl:choose>
        <xsl:when test="$value">
          <xsl:variable name="targetGroupAsset" select="cs:get-asset(xs:integer($value))"/>
          <option value="{$value}" display_value="{if ($targetGroupAsset) then ($targetGroupAsset/@name) else ($value)}"/>
        </xsl:when>
        <xsl:otherwise>
          <!-- create data model -->
          <xsl:variable name="options" as="element(option)*">
            <xsl:for-each select="cs:asset()[@censhare:asset.type='channel.*' and @censhare:asset-flag = 'is-template']">
              <option value="{@id}" display_value="{@name}"/>
            </xsl:for-each>
          </xsl:variable>
          <!-- create output -->
          <xsl:for-each select="$options">
            <xsl:sort select="@display_value"/>
            <xsl:sequence select="."/>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
    </options>
  </xsl:template>
  
</xsl:stylesheet>
